from aiogram.types import (ReplyKeyboardMarkup, KeyboardButton, 
                           InlineKeyboardMarkup, InlineKeyboardButton,)
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder
import app.database.requests as rq

main = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='üì¶ –≠–∫—Ä–∞–Ω –∑–∞–∫–∞–∑–æ–≤'),
                                      KeyboardButton(text='–ü–æ–º–æ—â—å')]], 
                            resize_keyboard=True,
                            input_field_placeholder='–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é...')

choseOrderStatusList = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='–î–æ—Å—Ç—É–ø–Ω—ã–µ'),
                                      KeyboardButton(text='–í —Ä–∞–±–æ—Ç–µ')],
                                      [KeyboardButton(text='–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ'),
                                      KeyboardButton(text='–í—Å–µ')]], 
                            resize_keyboard=True,
                            input_field_placeholder='–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é...')

roles = InlineKeyboardMarkup(inline_keyboard= [
    [InlineKeyboardButton(text="–î–∏—Å–ø–µ—Ç—á–µ—Ä", callback_data='role_disp')],
    [InlineKeyboardButton(text="–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤—â–∏–∫", callback_data='role_driver')]
])

get_number = ReplyKeyboardMarkup(keyboard=
    [[KeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä', request_contact=True)]],
    resize_keyboard=True)

async def cargo_types_keyboard():
    cargo_types = await rq.get_cargo_types()

    keyboard = InlineKeyboardBuilder()
    for cargo_id, cargo_name in cargo_types.items():
        keyboard.add(InlineKeyboardButton(text=cargo_name, callback_data=f'cargo_{cargo_id}'))
    return keyboard.adjust(1).as_markup()

orderKey = InlineKeyboardMarkup(inline_keyboard = [
    [InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data=f'cmd_order_accept'),
     InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å', callback_data=f'cmd_order_cancel')]
])

regKey = InlineKeyboardMarkup(inline_keyboard = [
    [InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data=f'cmd_register_accept'),
     InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å', callback_data=f'cmd_register_cancel')]
])

photoQuestKey = InlineKeyboardMarkup(inline_keyboard = [
    [InlineKeyboardButton(text='–î–∞', callback_data=f'cmd_photo_quest_accept'),
     InlineKeyboardButton(text='–ù–µ—Ç', callback_data=f'cmd_photo_quest_cancel')]
])

alarmOrderKey = InlineKeyboardMarkup(inline_keyboard = [
    [InlineKeyboardButton(text='–î–∞', callback_data=f'cmd_alarm_order_accept'),
     InlineKeyboardButton(text='–ù–µ—Ç', callback_data=f'cmd_alarm_order_cancel')]
])


dateOrder = InlineKeyboardMarkup(inline_keyboard = [
    [InlineKeyboardButton(text='–°–µ–≥–æ–¥–Ω—è', callback_data=f'date_order:today'),
     InlineKeyboardButton(text='–ó–∞–≤—Ç—Ä–∞', callback_data=f'date_order:tomorow')],
])

hourOrder = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='7', callback_data='hour_date_order:07'),
     InlineKeyboardButton(text='8', callback_data='hour_date_order:08')],
    [InlineKeyboardButton(text='9', callback_data='hour_date_order:09'),
     InlineKeyboardButton(text='10', callback_data='hour_date_order:10')],
    [InlineKeyboardButton(text='11', callback_data='hour_date_order:11'),
     InlineKeyboardButton(text='12', callback_data='hour_date_order:12')],
    [InlineKeyboardButton(text='13', callback_data='hour_date_order:13'),
     InlineKeyboardButton(text='14', callback_data='hour_date_order:14')],
    [InlineKeyboardButton(text='15', callback_data='hour_date_order:15'),
     InlineKeyboardButton(text='16', callback_data='hour_date_order:16')],
    [InlineKeyboardButton(text='17', callback_data='hour_date_order:17'),
     InlineKeyboardButton(text='18', callback_data='hour_date_order:18')]
])

minuteOrder = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='00', callback_data='minute_date_order:00'),
     InlineKeyboardButton(text='15', callback_data='minute_date_order:15')],
    [InlineKeyboardButton(text='30', callback_data='minute_date_order:30'),
     InlineKeyboardButton(text='45', callback_data='minute_date_order:45')]
])

privateCatalogKey = InlineKeyboardMarkup(inline_keyboard = [
    [InlineKeyboardButton(text='–í—ã–ø–æ–ª–Ω–∏—Ç—å', callback_data=f'accept_complete_order'),
     InlineKeyboardButton(text='–û—Ç–∫–∞–∑–∞—Ç—å—Å—è', callback_data=f'take_off_complete_order')],
    [InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ', callback_data=f'wath_photo_complete_order')]
])

publicCatalogKey = InlineKeyboardMarkup(inline_keyboard = [
    [InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤–∑—è—Ç–∏–µ –∑–∞–∫–∞–∑–∞', callback_data=f'accept_take_order')]
])

async def order_select_keyboard(data, isHistoruPraviteCatalog = False):
    order_keys = data["orderList"]
    start =data["indexStart"]
    end=data["indexEnd"]
    button_text = data["button_text"]
    actiual_order_list =order_keys[start:end]
    size = len(order_keys)
    keyboard = InlineKeyboardBuilder()
    if(data["userRole"] == "–í–æ–¥–∏—Ç–µ–ª—å" and not isHistoruPraviteCatalog):
        for kye in actiual_order_list:
            keyboard.add(InlineKeyboardButton(text=str(kye), callback_data=f'{button_text}:{kye}'))
    if start >= 5:
        keyboard.add(InlineKeyboardButton(text="<", callback_data=f'order_move_back'))
    if (size - end>= 1):
        keyboard.add(InlineKeyboardButton(text=">", callback_data=f'order_move_forward'))
    
    return keyboard.adjust(1).as_markup()

async def order_day(tg_id):
    user_role = await rq.get_user_role(tg_id=tg_id)
    builder = ReplyKeyboardBuilder()

    builder.add(KeyboardButton(text='–°–µ–≥–æ–¥–Ω—è'))
    builder.add(KeyboardButton(text='–ó–∞–≤—Ç—Ä–∞'))
    if(user_role == "–î–∏—Å–ø–µ—Ç—á–µ—Ä"):
        builder.add(KeyboardButton(text='–í—Å–µ'))

    builder.adjust(2, 1)

    order_list_categori = builder.as_markup(
        resize_keyboard=True,
        input_field_placeholder='–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é...'
    )
    return order_list_categori


private_order_list_kb = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã'),
                                      KeyboardButton(text='–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤')]], 
                            resize_keyboard=True,
                            input_field_placeholder='–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é...')

async def alarm_kb(orderId):
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(text=str("–í–∑—è—Ç—å –∑–∞–∫–∞–∑"), callback_data=f'cmd_take_alarm_order:{orderId}'))
    return keyboard.as_markup()